/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.*;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ASUS
 */
public class HomeFrm1 extends javax.swing.JFrame {

    //Quản Lí Thí Sinh
    /**
     * Creates new form HomeFrm1
     */
    
    //Thí Sinh
    private List<ThiSinh> ts;
    private List<ThiSinh> originalTs; // danh sách thí sinh gốc
    private DefaultTableModel tblModel_ThiSinh;
   
    
    //Phòng Thi
    private List<ThongTinPhongThi> phong_thi;
    private List<ThongTinPhongThi> originalPhong_thi;
    private DefaultTableModel tblModel_PhongThi;
    
    // Điểm Thi
    private List<Diem_Thi> diem_thi;
    private List<Diem_Thi> originalDiem_thi;
    private DefaultTableModel tblModel_DiemThi;
    
    //Quản Lí Điểm Thi
    private List<QliDiemThi> QliDiem_thi;
    private List<QliDiemThi> originalQliDiem_thi;
    private DefaultTableModel tblModel_QliDiemThi;
    
    //
    private int SelectedIndex;
    private int SelectedIndex1;
    private int SelectedIndex2;
    
    public HomeFrm1() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Trang Chủ");
        
        ts = new ArrayList<>();
        originalTs = new ArrayList<>(); // khởi tạo danh sách thí sinh gốc
        tblModel_ThiSinh = (DefaultTableModel) QliTable.getModel();
        
        phong_thi = new ArrayList<>();
        originalPhong_thi = new ArrayList<>();
        tblModel_PhongThi = (DefaultTableModel) PhongThiTable.getModel();
        
        diem_thi = new ArrayList<>();
        originalDiem_thi = new ArrayList<>();
        tblModel_DiemThi = (DefaultTableModel) DiemThiTable.getModel();
        
        QliDiem_thi = new ArrayList<>();
        originalQliDiem_thi = new ArrayList<>();
        tblModel_QliDiemThi = (DefaultTableModel) QliDiemThiTable.getModel();
        
        XoaKhiNhanVao();
    }
    
    public List<ThiSinh> getThiSinhs() {
        return ts;
    }
    
    public List<ThongTinPhongThi> getThongTinPhongThis() {
        return phong_thi;
    }
    
    public List<Diem_Thi> getDiem_This() {
        return diem_thi;
    }
    
    
    public void XoaKhiNhanVao() {
        SearchText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchText.setText("");
            }
        });
        
        SbdDTText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SbdDTText.setText("");
            }
        });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        addSvBtn = new javax.swing.JButton();
        EditBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        QliTable = new javax.swing.JTable();
        RefreshBtn = new javax.swing.JButton();
        SearchTSComboBox = new javax.swing.JComboBox<>();
        SearchText = new javax.swing.JTextField();
        LoadTSBtn = new javax.swing.JButton();
        SaveTSBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        PhongThiTable = new javax.swing.JTable();
        addPTBtn = new javax.swing.JButton();
        EditPTBtn = new javax.swing.JButton();
        DeletePTBtn = new javax.swing.JButton();
        SearchPTBtn = new javax.swing.JButton();
        SearchPTBtnComBboBox = new javax.swing.JComboBox<>();
        RefreshPTBtn = new javax.swing.JButton();
        SearchPTText = new javax.swing.JTextField();
        SavePTBtn = new javax.swing.JButton();
        LoadPTBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DiemThiTable = new javax.swing.JTable();
        SbdDTText = new javax.swing.JTextField();
        TraCuuDTBtn = new javax.swing.JButton();
        addDiemBtn = new javax.swing.JButton();
        editDiemBtn = new javax.swing.JButton();
        RefreshDiemBtn = new javax.swing.JButton();
        DeleteDiemBtn = new javax.swing.JButton();
        LoadDTBtn = new javax.swing.JButton();
        SaveDTBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        QliDiemThiTable = new javax.swing.JTable();
        QliDTAddBtn = new javax.swing.JButton();
        QliDTLoadBtn = new javax.swing.JButton();
        QliDTSaveBtn = new javax.swing.JButton();
        ThongKeComBoBox = new javax.swing.JComboBox<>();
        QliToTalText = new javax.swing.JTextField();
        ThongKeComBoBox1 = new javax.swing.JComboBox<>();
        QliToTalText1 = new javax.swing.JTextField();
        QliDTHienThiBtn = new javax.swing.JButton();
        QliDTHienThiBtn1 = new javax.swing.JButton();
        SearchQliBtn = new javax.swing.JTextField();
        QliDTRefrBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ThongKeComBoBox2 = new javax.swing.JComboBox<>();
        QliToTalText2 = new javax.swing.JTextField();
        QliDTHienThiBtn2 = new javax.swing.JButton();
        QliDTDeleteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 255));
        jLabel1.setText("Thông Tin Thí Sinh");

        addSvBtn.setBackground(new java.awt.Color(204, 204, 255));
        addSvBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addSvBtn.setText("Add");
        addSvBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSvBtnActionPerformed(evt);
            }
        });

        EditBtn.setBackground(new java.awt.Color(204, 204, 255));
        EditBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        EditBtn.setText("Edit");
        EditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setBackground(new java.awt.Color(204, 204, 255));
        DeleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        SearchBtn.setBackground(new java.awt.Color(204, 204, 255));
        SearchBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        QliTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SBD", "Họ Tên", "Ngày Sinh", "Giới Tính", "Tỉnh Thành", "Số Điện Thoại", "Khối Thi"
            }
        ));
        jScrollPane1.setViewportView(QliTable);

        RefreshBtn.setBackground(new java.awt.Color(204, 204, 255));
        RefreshBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        RefreshBtn.setText("Refresh");
        RefreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshBtnActionPerformed(evt);
            }
        });

        SearchTSComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SearchTSComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SBD", "Họ Tên" }));

        SearchText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SearchText.setText("Nhập SBD/Họ Tên");

        LoadTSBtn.setBackground(new java.awt.Color(204, 204, 255));
        LoadTSBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        LoadTSBtn.setText("Load");
        LoadTSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadTSBtnActionPerformed(evt);
            }
        });

        SaveTSBtn.setBackground(new java.awt.Color(204, 204, 255));
        SaveTSBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SaveTSBtn.setText("Save");
        SaveTSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveTSBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchTSComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSvBtn))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(EditBtn)
                        .addGap(50, 50, 50)
                        .addComponent(DeleteBtn)
                        .addGap(56, 56, 56)
                        .addComponent(RefreshBtn)
                        .addGap(71, 71, 71)
                        .addComponent(LoadTSBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(SearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(SearchBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SaveTSBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(jLabel1)
                .addContainerGap(422, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 55, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditBtn)
                    .addComponent(DeleteBtn)
                    .addComponent(RefreshBtn)
                    .addComponent(LoadTSBtn)
                    .addComponent(addSvBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchTSComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBtn)
                    .addComponent(SaveTSBtn))
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Thông Tin Thí Sinh", jPanel1);

        jLabel2.setBackground(new java.awt.Color(204, 204, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 255));
        jLabel2.setText("Thông Tin Phòng Thi");

        PhongThiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SBD", "Họ Tên", "Phòng Thi", "Địa Điểm Thi", "Người Giám Hộ"
            }
        ));
        jScrollPane2.setViewportView(PhongThiTable);
        if (PhongThiTable.getColumnModel().getColumnCount() > 0) {
            PhongThiTable.getColumnModel().getColumn(3).setHeaderValue("Địa Điểm Thi");
        }

        addPTBtn.setBackground(new java.awt.Color(204, 204, 255));
        addPTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addPTBtn.setText("Add");
        addPTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPTBtnActionPerformed(evt);
            }
        });

        EditPTBtn.setBackground(new java.awt.Color(204, 204, 255));
        EditPTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        EditPTBtn.setText("Edit");
        EditPTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditPTBtnActionPerformed(evt);
            }
        });

        DeletePTBtn.setBackground(new java.awt.Color(204, 204, 255));
        DeletePTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DeletePTBtn.setText("Delete");
        DeletePTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletePTBtnActionPerformed(evt);
            }
        });

        SearchPTBtn.setBackground(new java.awt.Color(204, 204, 255));
        SearchPTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SearchPTBtn.setText("Search");
        SearchPTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchPTBtnActionPerformed(evt);
            }
        });

        SearchPTBtnComBboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SearchPTBtnComBboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SBD", "Địa Điểm Thi", "Phòng Thi" }));

        RefreshPTBtn.setBackground(new java.awt.Color(204, 204, 255));
        RefreshPTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        RefreshPTBtn.setText("Refresh");
        RefreshPTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshPTBtnActionPerformed(evt);
            }
        });

        SearchPTText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        SavePTBtn.setBackground(new java.awt.Color(204, 204, 255));
        SavePTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SavePTBtn.setText("Save");
        SavePTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavePTBtnActionPerformed(evt);
            }
        });

        LoadPTBtn.setBackground(new java.awt.Color(204, 204, 255));
        LoadPTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        LoadPTBtn.setText("Load");
        LoadPTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadPTBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 836, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addComponent(SearchPTBtnComBboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SearchPTText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(addPTBtn)
                                .addGap(46, 46, 46)
                                .addComponent(EditPTBtn)
                                .addGap(58, 58, 58)
                                .addComponent(DeletePTBtn)))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SearchPTBtn)
                            .addComponent(RefreshPTBtn))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LoadPTBtn)
                            .addComponent(SavePTBtn))))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPTBtn)
                    .addComponent(EditPTBtn)
                    .addComponent(DeletePTBtn)
                    .addComponent(RefreshPTBtn)
                    .addComponent(LoadPTBtn))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchPTBtnComBboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SearchPTText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SearchPTBtn)
                        .addComponent(SavePTBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thông Tin Phòng Thi", jPanel2);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 255));
        jLabel3.setText("Kết Quả Thi");

        DiemThiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SBD", "Họ Tên", "Khối Thi", "Điểm Toán", "Điểm Văn", "Điểm Anh", "Điểm Tổ Hợp"
            }
        ));
        jScrollPane3.setViewportView(DiemThiTable);

        SbdDTText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SbdDTText.setText("Nhập SBD của bạn tại đây");

        TraCuuDTBtn.setBackground(new java.awt.Color(204, 204, 255));
        TraCuuDTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TraCuuDTBtn.setText("Tra Cứu");
        TraCuuDTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TraCuuDTBtnActionPerformed(evt);
            }
        });

        addDiemBtn.setBackground(new java.awt.Color(204, 204, 255));
        addDiemBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addDiemBtn.setText("Add");
        addDiemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDiemBtnActionPerformed(evt);
            }
        });

        editDiemBtn.setBackground(new java.awt.Color(204, 204, 255));
        editDiemBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editDiemBtn.setText("Edit");
        editDiemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDiemBtnActionPerformed(evt);
            }
        });

        RefreshDiemBtn.setBackground(new java.awt.Color(204, 204, 255));
        RefreshDiemBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        RefreshDiemBtn.setText("Refresh");
        RefreshDiemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshDiemBtnActionPerformed(evt);
            }
        });

        DeleteDiemBtn.setBackground(new java.awt.Color(204, 204, 255));
        DeleteDiemBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DeleteDiemBtn.setText("Delete");
        DeleteDiemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteDiemBtnActionPerformed(evt);
            }
        });

        LoadDTBtn.setBackground(new java.awt.Color(204, 204, 255));
        LoadDTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        LoadDTBtn.setText("Load");
        LoadDTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadDTBtnActionPerformed(evt);
            }
        });

        SaveDTBtn.setBackground(new java.awt.Color(204, 204, 255));
        SaveDTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SaveDTBtn.setText("Save");
        SaveDTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveDTBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(addDiemBtn)
                                .addGap(36, 36, 36)
                                .addComponent(editDiemBtn)
                                .addGap(55, 55, 55)
                                .addComponent(DeleteDiemBtn)
                                .addGap(55, 55, 55)
                                .addComponent(RefreshDiemBtn))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(SbdDTText, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(TraCuuDTBtn)))
                        .addGap(65, 65, 65)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SaveDTBtn)
                            .addComponent(LoadDTBtn))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDiemBtn)
                    .addComponent(editDiemBtn)
                    .addComponent(RefreshDiemBtn)
                    .addComponent(DeleteDiemBtn)
                    .addComponent(LoadDTBtn))
                .addGap(43, 43, 43)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SbdDTText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TraCuuDTBtn)
                    .addComponent(SaveDTBtn))
                .addGap(65, 65, 65))
        );

        jTabbedPane1.addTab("Kết Quả Thi", jPanel3);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 255));
        jLabel4.setText("Quản Lí Điểm Thi ");

        QliDiemThiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SBD", "Họ Tên", "Khối Thi", "Phòng Thi", "Điểm Toán", "Điểm Văn", "Điểm Anh", "Điểm Tổ Hợp"
            }
        ));
        jScrollPane6.setViewportView(QliDiemThiTable);

        QliDTAddBtn.setBackground(new java.awt.Color(204, 204, 255));
        QliDTAddBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QliDTAddBtn.setText("Add");
        QliDTAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QliDTAddBtnActionPerformed(evt);
            }
        });

        QliDTLoadBtn.setBackground(new java.awt.Color(204, 204, 255));
        QliDTLoadBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QliDTLoadBtn.setText("Load");
        QliDTLoadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QliDTLoadBtnActionPerformed(evt);
            }
        });

        QliDTSaveBtn.setBackground(new java.awt.Color(204, 204, 255));
        QliDTSaveBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QliDTSaveBtn.setText("Save");
        QliDTSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QliDTSaveBtnActionPerformed(evt);
            }
        });

        ThongKeComBoBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ThongKeComBoBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Khối Thi", "Phòng Thi" }));

        QliToTalText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        ThongKeComBoBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ThongKeComBoBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đậu Tốt Nghiệp", "Trượt Tốt Nghiệp" }));

        QliToTalText1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        QliDTHienThiBtn.setBackground(new java.awt.Color(204, 204, 255));
        QliDTHienThiBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QliDTHienThiBtn.setText("Hiển Thị");
        QliDTHienThiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QliDTHienThiBtnActionPerformed(evt);
            }
        });

        QliDTHienThiBtn1.setBackground(new java.awt.Color(204, 204, 255));
        QliDTHienThiBtn1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QliDTHienThiBtn1.setText("Hiển Thị");
        QliDTHienThiBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QliDTHienThiBtn1ActionPerformed(evt);
            }
        });

        SearchQliBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        QliDTRefrBtn.setBackground(new java.awt.Color(204, 204, 255));
        QliDTRefrBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QliDTRefrBtn.setText("Refresh");
        QliDTRefrBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QliDTRefrBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Số Thí Sinh Cùng");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Số Thí Sinh ");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Số Thí Sinh ");

        ThongKeComBoBox2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ThongKeComBoBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thủ Khoa", "Từ 27-29 điểm", "Từ 24-27 điểm", "Từ 21-24 điểm", "Dưới 21 điểm" }));

        QliToTalText2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        QliDTHienThiBtn2.setBackground(new java.awt.Color(204, 204, 255));
        QliDTHienThiBtn2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QliDTHienThiBtn2.setText("Hiển Thị");
        QliDTHienThiBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QliDTHienThiBtn2ActionPerformed(evt);
            }
        });

        QliDTDeleteBtn.setBackground(new java.awt.Color(204, 204, 255));
        QliDTDeleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QliDTDeleteBtn.setText("Delete");
        QliDTDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QliDTDeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(388, 388, 388)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(QliDTAddBtn)
                                    .addComponent(QliDTDeleteBtn))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(ThongKeComBoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(SearchQliBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(QliToTalText, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(ThongKeComBoBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(QliToTalText2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                            .addComponent(ThongKeComBoBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(40, 40, 40)
                                            .addComponent(QliToTalText1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(QliDTHienThiBtn)
                                    .addComponent(QliDTHienThiBtn1)
                                    .addComponent(QliDTHienThiBtn2))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(QliDTSaveBtn)
                                    .addComponent(QliDTRefrBtn)
                                    .addComponent(QliDTLoadBtn)))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 893, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(QliDTAddBtn)
                            .addComponent(ThongKeComBoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QliToTalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QliDTHienThiBtn)
                            .addComponent(SearchQliBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QliDTRefrBtn)
                            .addComponent(jLabel5))
                        .addGap(26, 26, 26)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QliDTLoadBtn)
                    .addComponent(ThongKeComBoBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QliToTalText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QliDTHienThiBtn1)
                    .addComponent(jLabel6)
                    .addComponent(QliDTDeleteBtn))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QliDTSaveBtn)
                    .addComponent(jLabel7)
                    .addComponent(ThongKeComBoBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QliToTalText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QliDTHienThiBtn2))
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Quản Lí", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSvBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSvBtnActionPerformed
        AddThiSinhFrm inputFrm = new AddThiSinhFrm(this, rootPaneCheckingEnabled);
        inputFrm.setVisible(true);
    }//GEN-LAST:event_addSvBtnActionPerformed

    private void EditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBtnActionPerformed
        SelectedIndex = QliTable.getSelectedRow();
        if (ts.size() == 0) {
            JOptionPane.showMessageDialog(null, "Chưa có thông tin thí sinh nào");
        }
        else if(SelectedIndex == -1) {
            JOptionPane.showMessageDialog(null, "Hãy chọn thí sinh cần sửa");
        }
        else {
            EditThiSinhFrm edit = new EditThiSinhFrm(this, rootPaneCheckingEnabled);
            edit.setEditData(ts.get(SelectedIndex));
            edit.setVisible(true);
        }
    }//GEN-LAST:event_EditBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        int removeIndex = QliTable.getSelectedRow();
        if (removeIndex == -1) {
            JOptionPane.showMessageDialog(null, "Không Có dữ liệu Thí Sinh nào");
        }
        else {
            int confirmed = JOptionPane.showConfirmDialog(null,
                "Bạn có chắc chắn muốn xóa thí sinh này không?", "Xác nhận xóa", JOptionPane.YES_NO_CANCEL_OPTION);

            if (confirmed == JOptionPane.YES_OPTION) {
                ts.remove(removeIndex);
                showData();
            }
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        String select = "";
        select = (String) SearchTSComboBox.getSelectedItem();
        switch(select) {
            case "SBD":
                String id = SearchText.getText();
                if (id.length() > 0) {
                    List<ThiSinh> filteredList = new ArrayList<>();
                    for (ThiSinh tss1 : originalTs) {
                        if (id.matches(".*" + tss1.getSbd() + ".*")) {
                            filteredList.add(tss1);
                        }
                    }
                    if (filteredList.size() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không Tìm Thấy SBD nào phù hợp!");
                    } else {
                        this.showData(filteredList);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Hãy nhập SBD cần tìm");
                }
                break;
            case "Họ Tên":
                String Dia_Diem = SearchText.getText();
                if (Dia_Diem.length() > 0) {
                    List<ThiSinh> filteredList = new ArrayList<>();
                    for (ThiSinh tss1 : originalTs) {
                        if (tss1.getTen_thi_sinh().toLowerCase().contains(Dia_Diem.toLowerCase())) {
                            filteredList.add(tss1);
                        }
                    }
                    if (filteredList.size() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không Tìm Thấy Tên Thí Sinh nào phù hợp!");
                    } else {
                        this.showData(filteredList);
                    }
                } else {
                        JOptionPane.showMessageDialog(null, "Hãy nhập tên thí sinh cần tìm");
                }
                break;
        }
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void RefreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshBtnActionPerformed
        ts.clear();
        ts.addAll(originalTs);
        showData();
    }//GEN-LAST:event_RefreshBtnActionPerformed

    private void addPTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPTBtnActionPerformed
        AddPhongThi phongthi = new AddPhongThi(this, rootPaneCheckingEnabled);
        phongthi.setVisible(true);
    }//GEN-LAST:event_addPTBtnActionPerformed

    private void EditPTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditPTBtnActionPerformed
        SelectedIndex1 = PhongThiTable.getSelectedRow();
        if (phong_thi.size() == 0) {
            JOptionPane.showMessageDialog(null, "Chưa có thông tin phòng thi nào");
        }
        else if(SelectedIndex1 == -1) {
            JOptionPane.showMessageDialog(null, "Hãy chọn phòng thi cần sửa");
        }
        else {
            EditPhongThi edit = new EditPhongThi(this, rootPaneCheckingEnabled);
            edit.setEditPTData(phong_thi.get(SelectedIndex1));
            edit.setVisible(true);
        }
    }//GEN-LAST:event_EditPTBtnActionPerformed

    private void DeletePTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletePTBtnActionPerformed
        int removeIndex = PhongThiTable.getSelectedRow();
        if (removeIndex == -1) {
            JOptionPane.showMessageDialog(null, "Không Có dữ liệu Thí Sinh nào");
        }
        else {
            int confirmed = JOptionPane.showConfirmDialog(null,
                "Bạn có chắc chắn muốn xóa thí sinh này không?", "Xác nhận xóa", JOptionPane.YES_NO_CANCEL_OPTION);

            if (confirmed == JOptionPane.YES_OPTION) {
                phong_thi.remove(removeIndex);
                showData1();
            }
        }
    }//GEN-LAST:event_DeletePTBtnActionPerformed

    private void SearchPTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchPTBtnActionPerformed
        String select = "";
        select = (String) SearchPTBtnComBboBox.getSelectedItem();
        switch(select) {
            case "SBD":
                String id = SearchPTText.getText();
                if (id.length() > 0) {
                    List<ThongTinPhongThi> filteredList = new ArrayList<>();
                    for (ThongTinPhongThi tss1 : originalPhong_thi) {
                        if (id.matches(".*" + tss1.getSbd() + ".*")) {
                            filteredList.add(tss1);
                        }
                    }
                    if (filteredList.size() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không Tìm Thấy SBD nào phù hợp!");
                    } else {
                        this.showData1(filteredList);
                    }
                } else {
                        JOptionPane.showMessageDialog(null, "Hãy nhập SBD cần tìm");
                }
                break;
                
            case "Địa Điểm Thi":
                String Dia_Diem = SearchPTText.getText();
                if (Dia_Diem.length() > 0) {
                    List<ThongTinPhongThi> filteredList = new ArrayList<>();
                    for (ThongTinPhongThi tss1 : originalPhong_thi) {
                        if (tss1.getDia_diem_thi().toLowerCase().contains(Dia_Diem.toLowerCase())) {
                            filteredList.add(tss1);
                        }
                    }
                    if (filteredList.size() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không Tìm Thấy Địa Điểm Thi nào phù hợp!");
                    } else {
                        this.showData1(filteredList);
                    }
                } else {
                        JOptionPane.showMessageDialog(null, "Hãy nhập tên địa điểm thi cần tìm");
                }
                break;
                
            case "Phòng Thi":
                String tenPT = SearchPTText.getText();
                if (tenPT.length() > 0) {
                    List<ThongTinPhongThi> filteredList = new ArrayList<>();
                    for (ThongTinPhongThi tss1 : originalPhong_thi) {
                        if (tss1.getPhongthi().equalsIgnoreCase(tenPT)) {
                            filteredList.add(tss1);
                        }
                    }
                    if (filteredList.size() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không Tìm Thấy Phòng Thi nào phù hợp!");
                    } else {
                        this.showData1(filteredList);
                    }
                } else {
                        JOptionPane.showMessageDialog(null, "Hãy nhập tên Phòng Thi cần tìm");
                }
                break;
        }
    }//GEN-LAST:event_SearchPTBtnActionPerformed

    private void RefreshPTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshPTBtnActionPerformed
        phong_thi.clear();
        phong_thi.addAll(originalPhong_thi);
        showData1();
    }//GEN-LAST:event_RefreshPTBtnActionPerformed

    private void editDiemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDiemBtnActionPerformed
        SelectedIndex2 = DiemThiTable.getSelectedRow();
        if (diem_thi.size() == 0) {
            JOptionPane.showMessageDialog(null, "Chưa có thông tin phòng thi nào");
        }
        else if(SelectedIndex2 == -1) {
            JOptionPane.showMessageDialog(null, "Hãy chọn phòng thi cần sửa");
        }
        else {
            EditDiemThi edit = new EditDiemThi(this, rootPaneCheckingEnabled);
            edit.setEditDTData(diem_thi.get(SelectedIndex2));
            edit.setVisible(true);
        }
    }//GEN-LAST:event_editDiemBtnActionPerformed

    private void addDiemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDiemBtnActionPerformed
        AddDiem diem = new AddDiem(this, rootPaneCheckingEnabled);
        diem.setVisible(true);
    }//GEN-LAST:event_addDiemBtnActionPerformed

    private void RefreshDiemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshDiemBtnActionPerformed
        diem_thi.clear();
        diem_thi.addAll(originalDiem_thi);
        showData2();
    }//GEN-LAST:event_RefreshDiemBtnActionPerformed

    private void DeleteDiemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteDiemBtnActionPerformed
        int removeIndex = DiemThiTable.getSelectedRow();
        if (removeIndex == -1) {
            JOptionPane.showMessageDialog(null, "Không Có dữ liệu Thí Sinh nào");
        }
        else {
            int confirmed = JOptionPane.showConfirmDialog(null,
                "Bạn có chắc chắn muốn xóa điểm thi của thí sinh này không?", "Xác nhận xóa", JOptionPane.YES_NO_CANCEL_OPTION);

            if (confirmed == JOptionPane.YES_OPTION) {
                diem_thi.remove(removeIndex);
                showData2();
            }
        }
    }//GEN-LAST:event_DeleteDiemBtnActionPerformed

    private void TraCuuDTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TraCuuDTBtnActionPerformed
        String id = SbdDTText.getText();
        if (id.length() > 0) {
            List<Diem_Thi> filteredList = new ArrayList<>();
            for (Diem_Thi tss1 : originalDiem_thi) {
                if (id.matches(".*" + tss1.getSbd() + ".*")) {
                    filteredList.add(tss1);
                }
            }
            if (filteredList.size() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Không Tìm Thấy SBD nào phù hợp!");
            } else {
                this.showData2(filteredList);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Hãy nhập SBD cần tìm");
        }
    }//GEN-LAST:event_TraCuuDTBtnActionPerformed

    private void LoadDTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadDTBtnActionPerformed
        FileInputStream fileDiemThi = null;
        ObjectInputStream InDiemThi = null;
        try {
            fileDiemThi = new FileInputStream("./test/diemthi.data");
            InDiemThi = new ObjectInputStream(fileDiemThi);
            diem_thi = (ArrayList<Diem_Thi>) InDiemThi.readObject();
            originalDiem_thi = new ArrayList<>(diem_thi);
            InDiemThi.close();
            fileDiemThi.close();
        } catch (Exception ex) {
            ex.getMessage();
            JOptionPane.showMessageDialog(rootPane, "Không có hoặc đã lỗi file diemthi");
        }
        
        tblModel_DiemThi.setRowCount(0);
        for(Diem_Thi c : diem_thi){
            tblModel_DiemThi.addRow(new Object[]{
                c.getSbd(), c.getTen_thi_sinh(), c.getKhoi_thi(),c.getDiem_Toan(),
                c.getDiem_Van(), c.getDiem_Anh(), c.getDiem_Tohop()
            });
        }
        JOptionPane.showMessageDialog(rootPane, "File đã được load thành công!");
    }//GEN-LAST:event_LoadDTBtnActionPerformed

    private void SaveDTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveDTBtnActionPerformed
        FileOutputStream fileDiemThi = null;
        ObjectOutputStream OutDiemThi = null;
        try {
            fileDiemThi = new FileOutputStream("./test/diemthi.data");
            OutDiemThi = new ObjectOutputStream(fileDiemThi);
            OutDiemThi.writeObject(diem_thi);
            OutDiemThi.close();
            fileDiemThi.close();
        } catch (Exception e) {
            e.getMessage();
        }
        finally{
            if(fileDiemThi != null){
                try {
                    fileDiemThi.close();
                } catch (IOException ex) {
                    ex.getMessage();
                }
            }
            
            if(OutDiemThi != null){
                try {
                    OutDiemThi.close();
                } catch (IOException ex) {
                    ex.getMessage();
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "File đã được lưu thành công!");
    }//GEN-LAST:event_SaveDTBtnActionPerformed

    private void LoadTSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadTSBtnActionPerformed
        FileInputStream fileThiSinh = null;
        ObjectInputStream InThiSinh = null;
        try {
            fileThiSinh = new FileInputStream("./test/ts.data");
            InThiSinh = new ObjectInputStream(fileThiSinh);
            ts = (ArrayList<ThiSinh>) InThiSinh.readObject();
            originalTs = new ArrayList<>(ts);
            InThiSinh.close();
            fileThiSinh.close();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Không có hoặc đã lỗi file ts");
        }
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        DecimalFormat decimalFormat = new DecimalFormat("#.##");
        tblModel_ThiSinh.setRowCount(0);
        for(ThiSinh coach : ts){

            tblModel_ThiSinh.addRow(new Object[]{
                coach.getSbd(), coach.getTen_thi_sinh(), dateFormat.format(coach.getNgay_sinh()),
                coach.getGioi_tinh(), coach.getTinh(), coach.getSdt(), coach.getKhoi_thi()
            });
        }
        JOptionPane.showMessageDialog(rootPane, "File đã được load thành công!");
    }//GEN-LAST:event_LoadTSBtnActionPerformed

    private void SaveTSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveTSBtnActionPerformed
        FileOutputStream fileThiSinh = null;  
        ObjectOutputStream outThiSinh = null; 
        try {
            fileThiSinh = new FileOutputStream("./test/ts.data");
            outThiSinh = new ObjectOutputStream(fileThiSinh);
            outThiSinh.writeObject(ts);
            outThiSinh.close();
            fileThiSinh.close();
        } catch (Exception e) {
            e.getMessage();
        }
        finally{ 
            if(fileThiSinh != null){
                try {
                    fileThiSinh.close();
                } catch (IOException ex) {
                    ex.getMessage();
                }
            }
            if(outThiSinh != null){
                try {
                    outThiSinh.close();
                } catch (IOException ex) {
                    ex.getMessage();
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "File đã được lưu thành công!");
    }//GEN-LAST:event_SaveTSBtnActionPerformed

    private void SavePTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavePTBtnActionPerformed
        FileOutputStream filePhongThi = null;  
        ObjectOutputStream outPhongThi = null; 
        try {
            filePhongThi = new FileOutputStream("./test/phongthi.data");
            outPhongThi = new ObjectOutputStream(filePhongThi);
            outPhongThi.writeObject(phong_thi);
            outPhongThi.close();
            filePhongThi.close();
        } catch (Exception e) {
            e.getMessage();
        }
        finally{ 
            if(filePhongThi != null){
                try {
                    filePhongThi.close();
                } catch (IOException ex) {
                    ex.getMessage();
                }
            }
            if(outPhongThi != null){
                try {
                    outPhongThi.close();
                } catch (IOException ex) {
                    ex.getMessage();
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "File đã được lưu thành công!");
    }//GEN-LAST:event_SavePTBtnActionPerformed

    private void LoadPTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadPTBtnActionPerformed
        FileInputStream filePT = null;
        ObjectInputStream InPT = null;
        try {
            filePT = new FileInputStream("./test/phongthi.data");
            InPT = new ObjectInputStream(filePT);
            phong_thi = (ArrayList<ThongTinPhongThi>) InPT.readObject();
            originalPhong_thi = new ArrayList<>(phong_thi);
            InPT.close();
            filePT.close();
        } catch (Exception ex) {
            ex.getMessage();
            JOptionPane.showMessageDialog(rootPane, "Không có hoặc đã lỗi file phongthi");
        }
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        DecimalFormat decimalFormat = new DecimalFormat("#.##");

        tblModel_PhongThi.setRowCount(0);
        for(ThongTinPhongThi addProduct : phong_thi){

            tblModel_PhongThi.addRow(new Object[]{
                addProduct.getSbd(), addProduct.getTen_thi_sinh(), 
                    addProduct.getPhongthi(), addProduct.getDia_diem_thi(), 
                    addProduct.getNguoi_giam_ho()
            });
        }
        
        JOptionPane.showMessageDialog(rootPane, "File đã được load thành công!");
    }//GEN-LAST:event_LoadPTBtnActionPerformed

    private void QliDTAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QliDTAddBtnActionPerformed
        AddQliDiemThi add = new AddQliDiemThi(this, rootPaneCheckingEnabled);
        add.setVisible(true);
    }//GEN-LAST:event_QliDTAddBtnActionPerformed

    private void QliDTLoadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QliDTLoadBtnActionPerformed
        FileInputStream fileQliDT = null;
        ObjectInputStream InQLiDT = null;
        try {
            fileQliDT = new FileInputStream("./test/qliDiemthi.data");
            InQLiDT = new ObjectInputStream(fileQliDT);
            QliDiem_thi = (ArrayList<QliDiemThi>) InQLiDT.readObject();
            originalQliDiem_thi = new ArrayList<>(QliDiem_thi);
            InQLiDT.close();
            fileQliDT.close();
        } catch (Exception ex) {
            ex.getMessage();
            JOptionPane.showMessageDialog(rootPane, "Không có hoặc đã lỗi file qliDiemthi");
        }
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        DecimalFormat decimalFormat = new DecimalFormat("#.##");

        tblModel_QliDiemThi.setRowCount(0);
        for (QliDiemThi dt : QliDiem_thi) {
            tblModel_QliDiemThi.addRow(new Object[] {
                dt.getThisinh().getSbd(), dt.getThisinh().getTen_thi_sinh(), dt.getThisinh().getKhoi_thi(),
                dt.getPhongthi().getPhongthi(), dt.getDiemthi().getDiem_Toan(), dt.getDiemthi().getDiem_Van(),
                dt.getDiemthi().getDiem_Anh(), dt.getDiemthi().getDiem_Tohop()
                
            });
        }
        JOptionPane.showMessageDialog(rootPane, "File đã được load thành công!");
    }//GEN-LAST:event_QliDTLoadBtnActionPerformed

    private void QliDTSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QliDTSaveBtnActionPerformed
        FileOutputStream fileQliDiemThi = null;  
        ObjectOutputStream outQliDiemThi = null; 
        try {
            fileQliDiemThi = new FileOutputStream("./test/qliDiemthi.data");
            outQliDiemThi = new ObjectOutputStream(fileQliDiemThi);
            outQliDiemThi.writeObject(QliDiem_thi);
            outQliDiemThi.close();
            fileQliDiemThi.close();
        } catch (Exception e) {
            e.getMessage();
        }
        finally{ 
            if(fileQliDiemThi != null){
                try {
                    fileQliDiemThi.close();
                } catch (IOException ex) {
                    ex.getMessage();
                }
            }
            if(outQliDiemThi != null){
                try {
                    outQliDiemThi.close();
                } catch (IOException ex) {
                    ex.getMessage();
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "File đã được lưu thành công!");
    }//GEN-LAST:event_QliDTSaveBtnActionPerformed

    private void QliDTHienThiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QliDTHienThiBtnActionPerformed
        String select = "";
        select = (String) ThongKeComBoBox.getSelectedItem();
        switch(select) {
            case "Khối Thi":
                String kt = SearchQliBtn.getText();
                if (kt.length() > 0) {
                    List<QliDiemThi> filteredList = new ArrayList<>();
                    for (QliDiemThi tss1 : originalQliDiem_thi) {
                        if (tss1.getThisinh().getKhoi_thi().equalsIgnoreCase(kt)) {
                            filteredList.add(tss1);
                        }
                    }
                    if (filteredList.size() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không tìm thấy khối thi phù hợp!");
                        QliToTalText.setText(String.valueOf(0));
                    } else {
                        this.showData3(filteredList);
                        countThiSinhs(filteredList);
                    }
                } else {
                        JOptionPane.showMessageDialog(null, "Hãy nhập khối thi cần tìm");
                }
                break;
                
            case "Phòng Thi":
                String Dia_Diem = SearchQliBtn.getText();
                if (Dia_Diem.length() > 0) {
                    List<QliDiemThi> filteredList = new ArrayList<>();
                    for (QliDiemThi tss1 : originalQliDiem_thi) {
                        if (tss1.getPhongthi().getPhongthi().equalsIgnoreCase(Dia_Diem)) {
                            filteredList.add(tss1);
                        }
                    }
                    if (filteredList.size() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không Tìm Thấy Phòng Thi nào phù hợp!");
                        QliToTalText.setText(String.valueOf(0));
                    } else {
                        this.showData3(filteredList);
                        countThiSinhs(filteredList);
                    }
                } else {
                        JOptionPane.showMessageDialog(null, "Hãy nhập tên Phòng Thi cần tìm");
                }
                break;
        }
        
    }//GEN-LAST:event_QliDTHienThiBtnActionPerformed

    private void QliDTHienThiBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QliDTHienThiBtn1ActionPerformed
        String select = "";
        select = (String) ThongKeComBoBox1.getSelectedItem();
        switch(select) {
            case "Đậu Tốt Nghiệp":
                List<QliDiemThi> filteredList = new ArrayList<>();
                for (QliDiemThi tss1 : originalQliDiem_thi) {
                    if (tss1.getDiemthi().getDiem_Anh() >= 1 && tss1.getDiemthi().getDiem_Toan()>= 1
                            && tss1.getDiemthi().getDiem_Van()>= 1) {
                        filteredList.add(tss1);
                    }
                }
                if (filteredList.size() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không có thí sinh đậu tốt nghiệp!");
                    QliToTalText1.setText(String.valueOf(0));
                } else {
                    this.showData3(filteredList);
                    countThiSinhs1(filteredList);
                }
                break;
                
            case "Trượt Tốt Nghiệp":
                List<QliDiemThi> filteredList1 = new ArrayList<>();
                for (QliDiemThi tss1 : originalQliDiem_thi) {
                    if (tss1.getDiemthi().getDiem_Anh() < 1 || tss1.getDiemthi().getDiem_Toan() < 1
                            || tss1.getDiemthi().getDiem_Van() < 1) {
                        filteredList1.add(tss1);
                    }
                }
                if (filteredList1.size() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không có thí sinh trượt tốt nghiệp!");
                    QliToTalText1.setText(String.valueOf(0));
                } else {
                    this.showData3(filteredList1);
                    countThiSinhs1(filteredList1);
                }
                break;
        }
    }//GEN-LAST:event_QliDTHienThiBtn1ActionPerformed

    private void QliDTRefrBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QliDTRefrBtnActionPerformed
        QliDiem_thi.clear();
        QliDiem_thi.addAll(originalQliDiem_thi);
        showData3();
    }//GEN-LAST:event_QliDTRefrBtnActionPerformed

    private void QliDTHienThiBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QliDTHienThiBtn2ActionPerformed
        String select = "";
        select = (String) ThongKeComBoBox2.getSelectedItem();
        switch(select) {
            case "Thủ Khoa":
                double highestScore = 0;
                List<QliDiemThi> filteredList = new ArrayList<>();
                for (QliDiemThi tss1 : originalQliDiem_thi) {
                    if (tss1.getDiemthi().getDiem_Tohop() >= highestScore) {
                        highestScore = tss1.getDiemthi().getDiem_Tohop();
                    }
                }
                for (QliDiemThi tss1 : originalQliDiem_thi) {
                    if (tss1.getDiemthi().getDiem_Tohop() == highestScore) {
                        filteredList.add(tss1);
                    }
                }
                if (filteredList.size() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không có thí sinh nào thủ khoa");
                    QliToTalText2.setText(String.valueOf(0));
                } else {
                    this.showData3(filteredList);
                    countThiSinhs2(filteredList);
                }
                break;
                
            case "Từ 27-29 điểm":
                List<QliDiemThi> filteredList1 = new ArrayList<>();
                for (QliDiemThi tss1 : originalQliDiem_thi) {
                    if (tss1.getDiemthi().getDiem_Tohop() >= 27 && tss1.getDiemthi().getDiem_Tohop() <= 29) {
                        filteredList1.add(tss1);
                    }
                }
                if (filteredList1.size() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không có thí sinh nào trong khoảng 27-29 điểm!");
                            QliToTalText2.setText(String.valueOf(0));

                } else {
                    this.showData3(filteredList1);
                    countThiSinhs2(filteredList1);
                }
                break;
                
            case "Từ 24-27 điểm":
                List<QliDiemThi> filteredList2 = new ArrayList<>();
                for (QliDiemThi tss1 : originalQliDiem_thi) {
                    if (tss1.getDiemthi().getDiem_Tohop() >= 24 && tss1.getDiemthi().getDiem_Tohop() < 27) {
                        filteredList2.add(tss1);
                    }
                }
                if (filteredList2.size() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không có thí sinh nào trong khoảng 24-27 điểm!");
                    QliToTalText2.setText(String.valueOf(0));
                } else {
                    this.showData3(filteredList2);
                    countThiSinhs2(filteredList2);
                }
                break;
                
            case "Từ 21-24 điểm":
                List<QliDiemThi> filteredList3 = new ArrayList<>();
                for (QliDiemThi tss1 : originalQliDiem_thi) {
                    if (tss1.getDiemthi().getDiem_Tohop() >= 21 && tss1.getDiemthi().getDiem_Tohop() < 24) {
                        filteredList3.add(tss1);
                    }
                }
                if (filteredList3.size() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không có thí sinh nào trong khoảng 21-24 điểm!");
                    QliToTalText2.setText(String.valueOf(0));
                } else {
                    this.showData3(filteredList3);
                    countThiSinhs2(filteredList3);
                }
                break;
                
            case "Dưới 21 điểm":
                List<QliDiemThi> filteredList4 = new ArrayList<>();
                for (QliDiemThi tss1 : originalQliDiem_thi) {
                    if (tss1.getDiemthi().getDiem_Tohop() < 21) {
                        filteredList4.add(tss1);
                    }
                }
                if (filteredList4.size() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không có thí sinh nào dưới 21 điểm!");
                    QliToTalText2.setText(String.valueOf(0));
                } else {
                    this.showData3(filteredList4);
                    countThiSinhs2(filteredList4);
                }
                break;
        }
    }//GEN-LAST:event_QliDTHienThiBtn2ActionPerformed

    private void QliDTDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QliDTDeleteBtnActionPerformed
        int removeIndex = QliDiemThiTable.getSelectedRow();
        if (removeIndex == -1) {
            JOptionPane.showMessageDialog(null, "Không Có dữ liệu Thí Sinh nào");
        }
        else {
            int confirmed = JOptionPane.showConfirmDialog(null,
                "Bạn có chắc chắn muốn xóa điểm thi của thí sinh này không?", "Xác nhận xóa", JOptionPane.YES_NO_CANCEL_OPTION);

            if (confirmed == JOptionPane.YES_OPTION) {
                QliDiem_thi.remove(removeIndex);
                showData3();
            }
        }
    }//GEN-LAST:event_QliDTDeleteBtnActionPerformed

    // Quản Lí Thí Sinh
    private void showData() {
        tblModel_ThiSinh.setRowCount(0);
        for (ThiSinh TS : ts) {
            tblModel_ThiSinh.addRow(new Object[]{
                TS.getSbd(), TS.getTen_thi_sinh(), 
                TS.getNgay_sinh().getDate() + "/" + (TS.getNgay_sinh().getMonth() + 1) + "/" + (TS.getNgay_sinh().getYear() + 1900),
                TS.getGioi_tinh(), TS.getTinh(), TS.getSdt(), TS.getKhoi_thi()});
        }
    }
    
    
    private void showData(List<ThiSinh> list) {
        tblModel_ThiSinh.setRowCount(0);
        for (ThiSinh TS : list) {
            tblModel_ThiSinh.addRow(new Object[]{TS.getSbd(), TS.getTen_thi_sinh(),
                TS.getNgay_sinh().getDate() + "/" + (TS.getNgay_sinh().getMonth() + 1) + "/" + (TS.getNgay_sinh().getYear() + 1900),
                TS.getGioi_tinh(), TS.getTinh(), TS.getSdt(), TS.getKhoi_thi()});
        }
    }
    
    public void addThiSinh(ThiSinh t) {
        ts.add(t);
        originalTs.add(t); // thêm thí sinh mới vào danh sách gốc
        showData();
    }
    
    public void updateThiSinh(ThiSinh t) {
        ts.remove(SelectedIndex);
        this.addThiSinh(t);
    }
    
    // Quản Lí Phòng Thi
    
    private void showData1() {
        tblModel_PhongThi.setRowCount(0);
        for (ThongTinPhongThi PhongThi : phong_thi) {
            tblModel_PhongThi.addRow(new Object[]{PhongThi.getSbd(), PhongThi.getTen_thi_sinh(),
                PhongThi.getPhongthi(), PhongThi.getDia_diem_thi(), PhongThi.getNguoi_giam_ho()});
        }
    }
    
    private void showData1(List<ThongTinPhongThi> list) {
        tblModel_PhongThi.setRowCount(0);
        for (ThongTinPhongThi PhongThi : list) {
            tblModel_PhongThi.addRow(new Object[]{PhongThi.getSbd(), PhongThi.getTen_thi_sinh(),
                PhongThi.getPhongthi(), PhongThi.getDia_diem_thi(), PhongThi.getNguoi_giam_ho()});
        }
    }
    

    public void addPhongThi(ThongTinPhongThi pt) {
        phong_thi.add(pt);
        originalPhong_thi.add(pt);
        showData1();
    }
    
    public void updatePhongThi(ThongTinPhongThi ttpt) {
        phong_thi.remove(SelectedIndex1);
        this.addPhongThi(ttpt);
    }
    
    // Quản Lí Điểm Thi
    
    private void showData2() {
        tblModel_DiemThi.setRowCount(0);
        for (Diem_Thi diemthi : diem_thi) {
            tblModel_DiemThi.addRow(new Object[]{diemthi.getSbd(), diemthi.getTen_thi_sinh(), diemthi.getKhoi_thi(),
                diemthi.getDiem_Toan(), diemthi.getDiem_Van(), diemthi.getDiem_Anh(), diemthi.getDiem_Tohop()});
        }
    }
    
    private void showData2(List<Diem_Thi> list) {
        tblModel_DiemThi.setRowCount(0);
        for (Diem_Thi diemthi : list) {
            tblModel_DiemThi.addRow(new Object[]{diemthi.getSbd(), diemthi.getTen_thi_sinh(), diemthi.getKhoi_thi(),
                diemthi.getDiem_Toan(), diemthi.getDiem_Van(), diemthi.getDiem_Anh(), diemthi.getDiem_Tohop()});
        }
    }
    
    public void addDiemThi(Diem_Thi dt) {
        diem_thi.add(dt);
        originalDiem_thi.add(dt);
        showData2();
    }
    
    public void updateDiemThi(Diem_Thi diemthi) {
        diem_thi.remove(SelectedIndex2);
        this.addDiemThi(diemthi);
    }
    
    private Set<String> addedData = new HashSet<>();
    // Qli Điểm Thi
    public boolean addQliDiemThi(ThiSinh ts, ThongTinPhongThi pt, Diem_Thi dt) {
        String key = ts.getSbd() + pt.getSbd() + dt.getSbd(); // Tạo một khóa duy nhất cho dữ liệu

        if (addedData.contains(key)) {
            JOptionPane.showMessageDialog(rootPane, "Dữ liệu đã được thêm trước đó");
            return false; // Đã tồn tại dữ liệu trong bảng
        }
        QliDiemThi qliDiemThi = new QliDiemThi(ts, pt, dt);
        QliDiem_thi.add(qliDiemThi);
        originalQliDiem_thi.add(qliDiemThi);
        showData3();
        countThiSinhs(QliDiem_thi);
        
        addedData.add(key); // Lưu trữ khóa của dữ liệu đã được thêm
        
        return true;
    }
    
    private void showData3() {
        tblModel_QliDiemThi.setRowCount(0);
        for (QliDiemThi dt : QliDiem_thi) {
            tblModel_QliDiemThi.addRow(new Object[] {
                dt.getThisinh().getSbd(), dt.getThisinh().getTen_thi_sinh(), dt.getThisinh().getKhoi_thi(),
                dt.getPhongthi().getPhongthi(), dt.getDiemthi().getDiem_Toan(), dt.getDiemthi().getDiem_Van(),
                dt.getDiemthi().getDiem_Anh(), dt.getDiemthi().getDiem_Tohop()
                
            });
        }
    }
    
    private void showData3(List<QliDiemThi> list) {
        tblModel_QliDiemThi.setRowCount(0);
        for (QliDiemThi dt : list) {
            tblModel_QliDiemThi.addRow(new Object[] {
                dt.getThisinh().getSbd(), dt.getThisinh().getTen_thi_sinh(), dt.getThisinh().getKhoi_thi(),
                dt.getPhongthi().getPhongthi(), dt.getDiemthi().getDiem_Toan(), dt.getDiemthi().getDiem_Van(),
                dt.getDiemthi().getDiem_Anh(), dt.getDiemthi().getDiem_Tohop()
                
            });
        }
    }
    
    private void countThiSinhs(List<QliDiemThi> qliDiemThiList) {
        int count = qliDiemThiList.size();
        QliToTalText.setText(String.valueOf(count));
    }
    
    private void countThiSinhs1(List<QliDiemThi> qliDiemThiList) {
        int count = qliDiemThiList.size();
        QliToTalText1.setText(String.valueOf(count));
    }
    
    private void countThiSinhs2(List<QliDiemThi> qliDiemThiList) {
        int count = qliDiemThiList.size();
        QliToTalText2.setText(String.valueOf(count));
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeFrm1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeFrm1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeFrm1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeFrm1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeFrm1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton DeleteDiemBtn;
    private javax.swing.JButton DeletePTBtn;
    private javax.swing.JTable DiemThiTable;
    private javax.swing.JButton EditBtn;
    private javax.swing.JButton EditPTBtn;
    private javax.swing.JButton LoadDTBtn;
    private javax.swing.JButton LoadPTBtn;
    private javax.swing.JButton LoadTSBtn;
    private javax.swing.JTable PhongThiTable;
    private javax.swing.JButton QliDTAddBtn;
    private javax.swing.JButton QliDTDeleteBtn;
    private javax.swing.JButton QliDTHienThiBtn;
    private javax.swing.JButton QliDTHienThiBtn1;
    private javax.swing.JButton QliDTHienThiBtn2;
    private javax.swing.JButton QliDTLoadBtn;
    private javax.swing.JButton QliDTRefrBtn;
    private javax.swing.JButton QliDTSaveBtn;
    private javax.swing.JTable QliDiemThiTable;
    private javax.swing.JTable QliTable;
    private javax.swing.JTextField QliToTalText;
    private javax.swing.JTextField QliToTalText1;
    private javax.swing.JTextField QliToTalText2;
    private javax.swing.JButton RefreshBtn;
    private javax.swing.JButton RefreshDiemBtn;
    private javax.swing.JButton RefreshPTBtn;
    private javax.swing.JButton SaveDTBtn;
    private javax.swing.JButton SavePTBtn;
    private javax.swing.JButton SaveTSBtn;
    private javax.swing.JTextField SbdDTText;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JButton SearchPTBtn;
    private javax.swing.JComboBox<String> SearchPTBtnComBboBox;
    private javax.swing.JTextField SearchPTText;
    private javax.swing.JTextField SearchQliBtn;
    private javax.swing.JComboBox<String> SearchTSComboBox;
    private javax.swing.JTextField SearchText;
    private javax.swing.JComboBox<String> ThongKeComBoBox;
    private javax.swing.JComboBox<String> ThongKeComBoBox1;
    private javax.swing.JComboBox<String> ThongKeComBoBox2;
    private javax.swing.JButton TraCuuDTBtn;
    private javax.swing.JButton addDiemBtn;
    private javax.swing.JButton addPTBtn;
    private javax.swing.JButton addSvBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton editDiemBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

//    @Override
//    public <T> void showData(List<T> list, DefaultTableModel model) {
//        for (T t : list) {
//            if (t instanceof ThiSinh) {
//                ThiSinh TS = (ThiSinh) t;
//                model.addRow(new Object[] {
//                    TS.getSbd(), TS.getTen_thi_sinh(),
//                TS.getNgay_sinh().getDate() + "/" + (TS.getNgay_sinh().getMonth() + 1) + "/" + (TS.getNgay_sinh().getYear() + 1900),
//                TS.getGioi_tinh(), TS.getTinh(), TS.getSdt(), TS.getKhoi_thi()
//                });
//            }
//        }
//    } 
}
