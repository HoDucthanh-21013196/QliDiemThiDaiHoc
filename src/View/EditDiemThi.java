/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import Model.Diem_Thi;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class EditDiemThi extends javax.swing.JDialog {

    /**
     * Creates new form EditDiemThi
     */
    private HomeFrm1 home;
    public EditDiemThi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        home = (HomeFrm1) parent;
        this.setTitle("Sửa Thông Tin");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        SbdDTText = new javax.swing.JTextField();
        HoTenDTText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        KhoiThiDTText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        ToanText = new javax.swing.JTextField();
        VanText = new javax.swing.JTextField();
        AnhText = new javax.swing.JTextField();
        VatLiText = new javax.swing.JTextField();
        HoaText = new javax.swing.JTextField();
        SinhText = new javax.swing.JTextField();
        SuText = new javax.swing.JTextField();
        DiaLiText = new javax.swing.JTextField();
        GdcdText = new javax.swing.JTextField();
        CancelDtBtn = new javax.swing.JButton();
        SaveDtBtn = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        TohopText = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(51, 51, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 102));
        jLabel1.setText("Sửa Thông Tin Điểm Thi");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Thông Tin Điểm Thi");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Số Báo Danh");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Họ và Tên");
        jLabel3.setMaximumSize(new java.awt.Dimension(87, 20));
        jLabel3.setMinimumSize(new java.awt.Dimension(87, 20));
        jLabel3.setPreferredSize(new java.awt.Dimension(87, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Khối Thi");
        jLabel4.setMaximumSize(new java.awt.Dimension(87, 20));
        jLabel4.setMinimumSize(new java.awt.Dimension(87, 20));
        jLabel4.setPreferredSize(new java.awt.Dimension(87, 20));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("Thông Tin Điểm Thi");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Toán");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Ngữ Văn");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("T.Anh");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Vật Lý");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Hóa Học");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Sinh Học");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Lịch Sử");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Địa Lí");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("GDCD");

        ToanText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        VanText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        AnhText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        VatLiText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        HoaText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        SinhText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        SuText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        DiaLiText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        GdcdText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        CancelDtBtn.setBackground(new java.awt.Color(204, 204, 255));
        CancelDtBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CancelDtBtn.setText("Cancel");
        CancelDtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelDtBtnActionPerformed(evt);
            }
        });

        SaveDtBtn.setBackground(new java.awt.Color(204, 204, 255));
        SaveDtBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SaveDtBtn.setText("Save");
        SaveDtBtn.setToolTipText("");
        SaveDtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveDtBtnActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Tổ Hợp");

        TohopText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A (Toán, Lý, Hóa)", "A1 (Toán, Lý, Anh)", "B (Toán, Hóa, Sinh)", "B1 (Toán, Sinh, Sử)", "C (Văn, Sử, Địa)", "C1 (Văn, Sử, GDCD)", "D (Toán, Văn, Anh)", "D7 (Toán, Hóa, Anh)" }));

        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Save");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Exit");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem4.setText("About me");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ToanText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(33, 33, 33)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(VanText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AnhText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(SbdDTText, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(HoTenDTText, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(VatLiText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(41, 41, 41)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(HoaText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(SinhText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(SaveDtBtn)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(CancelDtBtn)
                                                .addGap(30, 30, 30)))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(SuText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(DiaLiText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(GdcdText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TohopText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(KhoiThiDTText))))
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(SbdDTText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HoTenDTText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KhoiThiDTText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel9)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel16))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(jLabel11)
                        .addComponent(jLabel10)
                        .addComponent(jLabel14)
                        .addComponent(jLabel13)
                        .addComponent(jLabel12)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ToanText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(VanText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AnhText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(VatLiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(HoaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SinhText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SuText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GdcdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DiaLiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TohopText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelDtBtn)
                    .addComponent(SaveDtBtn))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelDtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelDtBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelDtBtnActionPerformed

    private void SaveDtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveDtBtnActionPerformed
        String sbd = "";
        String name = "", khoi_thi = "";
        float toan = 0, van = 0, anh = 0, vli = 0, hoa = 0, sinh = 0, su = 0, dli = 0, gdcd = 0, tohop = 0;
        boolean isOK = true;

//        try {
//            sbd = Integer.parseInt(SbdDTText.getText());
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Số báo danh không hợp lệ");
//            isOK = false;
//        }
        sbd = SbdDTText.getText();
        
        try {
            // Kiểm tra xem chuỗi nhập vào có
            if (!sbd.matches("[a-zA-Z0-9]+")) {
                throw new Exception("Chuỗi nhập vào không hợp lệ");
            }   
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Hãy nhập đúng định dạng,"
                    + " chỉ có thể nhập các chữ cái và chữ số");
            isOK = false;
        }

        name = HoTenDTText.getText();
        try {
            // Kiểm tra xem chuỗi nhập vào có chứa ký tự đặc biệt hoặc số không
            if (!name.matches("^[a-zA-Z\\s]+$")) {
                throw new Exception("Chuỗi nhập vào không hợp lệ");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Hãy nhập "
                + "đúng định dạng, chỉ có thể nhập các chữ cái không có số và kí tự đặc biệt.");
            isOK = false;
        }

        khoi_thi = KhoiThiDTText.getText();
        try {
            // Kiểm tra chuỗi nhập vào có đúng định dạng không
            if (!khoi_thi.matches("^(A1?|B1?|C1?|D7?|[ABCDEF])$")) {
                throw new Exception("Chuỗi nhập vào không hợp lệ");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Khối thi không hợp lệ. "
                + "Vui lòng chỉ nhập khối thi là A, A1, B, B1, C, C1, D hoặc D7.");
            isOK = false;
        }

        //Khối D

        if (khoi_thi.equals("D")) {
            try {
                toan = Float.parseFloat(ToanText.getText());
                if (toan < 0 || toan > 10) {
                    throw new Exception("Điểm Toán không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Toán không hợp lệ");
                isOK = false;
            }

            try {
                van = Float.parseFloat(VanText.getText());
                if (van < 0 || van > 10) {
                    throw new Exception("Điểm Văn không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            try {
                anh = Float.parseFloat(AnhText.getText());
                if (anh < 0 || anh > 10) {
                    throw new Exception("Điểm Anh không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Anh không hợp lệ");
                isOK = false;
            }

            tohop = toan + van + anh;
            TohopText.setText(String.valueOf(tohop));
            TohopText.setEditable(false);

            HoaText.setEditable(false);
            SinhText.setEditable(false);
            SuText.setEditable(false);
            DiaLiText.setEditable(false);
            GdcdText.setEditable(false);
        }

        //Khối D7

        if (khoi_thi.equals("D7")) {
            try {
                toan = Float.parseFloat(ToanText.getText());
                if (toan < 0 || toan > 10) {
                    throw new Exception("Điểm Toán không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Toán không hợp lệ");
                isOK = false;
            }

            try {
                van = Float.parseFloat(VanText.getText());
                if (van < 0 || van > 10) {
                    throw new Exception("Điểm Văn không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            try {
                anh = Float.parseFloat(AnhText.getText());
                if (anh < 0 || anh > 10) {
                    throw new Exception("Điểm Anh không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Anh không hợp lệ");
                isOK = false;
            }

            try {
                hoa = Float.parseFloat(HoaText.getText());
                if (hoa < 0 || hoa > 10) {
                    throw new Exception("Điểm Hóa không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Hóa không hợp lệ");
                isOK = false;
            }

            tohop = toan + hoa + anh;
            TohopText.setText(String.valueOf(tohop));
            TohopText.setEditable(false);

            VatLiText.setEditable(false);
            SinhText.setEditable(false);
            SuText.setEditable(false);
            DiaLiText.setEditable(false);
            GdcdText.setEditable(false);
        }

        //Khối A

        if (khoi_thi.equals("A")) {
            try {
                toan = Float.parseFloat(ToanText.getText());
                if (toan < 0 || toan > 10) {
                    throw new Exception("Điểm Toán không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Toán không hợp lệ");
                isOK = false;
            }

            try {
                van = Float.parseFloat(VanText.getText());
                if (van < 0 || van > 10) {
                    throw new Exception("Điểm Văn không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            try {
                anh = Float.parseFloat(AnhText.getText());
                if (anh < 0 || anh > 10) {
                    throw new Exception("Điểm Anh không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Anh không hợp lệ");
                isOK = false;
            }

            try {
                vli = Float.parseFloat(VatLiText.getText());
                if (vli < 0 || vli > 10) {
                    throw new Exception("Điểm Vật Lý không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Vật lí không hợp lệ");
                isOK = false;
            }

            try {
                hoa = Float.parseFloat(HoaText.getText());
                if (hoa < 0 || hoa > 10) {
                    throw new Exception("Điểm Hóa Học không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Hóa không hợp lệ");
                isOK = false;
            }

            tohop = toan + vli + hoa;
            TohopText.setText(String.valueOf(tohop));
            TohopText.setEditable(false);

            SinhText.setEditable(false);
            SuText.setEditable(false);
            DiaLiText.setEditable(false);
            GdcdText.setEditable(false);
        }

        // Khối A1
        if (khoi_thi.equals("A1")) {
            try {
                toan = Float.parseFloat(ToanText.getText());
                if (toan < 0 || toan > 10) {
                    throw new Exception("Điểm Toán không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Toán không hợp lệ");
                isOK = false;
            }

            try {
                van = Float.parseFloat(VanText.getText());
                if (van < 0 || van > 10) {
                    throw new Exception("Điểm Văn không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            try {
                anh = Float.parseFloat(AnhText.getText());
                if (anh < 0 || anh > 10) {
                    throw new Exception("Điểm Anh không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Anh không hợp lệ");
                isOK = false;
            }

            try {
                vli = Float.parseFloat(VatLiText.getText());
                if (vli < 0 || vli > 10) {
                    throw new Exception("Điểm Vật Lý không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Vật lí không hợp lệ");
                isOK = false;
            }

            tohop = toan + vli + anh;
            TohopText.setText(String.valueOf(tohop));
            TohopText.setEditable(false);

            HoaText.setEditable(false);
            SinhText.setEditable(false);
            SuText.setEditable(false);
            DiaLiText.setEditable(false);
            GdcdText.setEditable(false);
        }

        //Khối B
        if (khoi_thi.equals("B")) {
            try {
                toan = Float.parseFloat(ToanText.getText());
                if (toan < 0 || toan > 10) {
                    throw new Exception("Điểm Toán không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Toán không hợp lệ");
                isOK = false;
            }

            try {
                van = Float.parseFloat(VanText.getText());
                if (van < 0 || van > 10) {
                    throw new Exception("Điểm Văn không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            try {
                anh = Float.parseFloat(AnhText.getText());
                if (anh < 0 || anh > 10) {
                    throw new Exception("Điểm Anh không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Anh không hợp lệ");
                isOK = false;
            }

            try {
                hoa = Float.parseFloat(HoaText.getText());
                if (hoa < 0 || hoa > 10) {
                    throw new Exception("Điểm Hóa Học không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Hóa không hợp lệ");
                isOK = false;
            }

            try {
                sinh = Float.parseFloat(SinhText.getText());
                if (sinh < 0 || sinh > 10) {
                    throw new Exception("Điểm Sinh Học không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            tohop = toan + hoa + sinh;
            TohopText.setText(String.valueOf(tohop));
            TohopText.setEditable(false);

            VatLiText.setEditable(false);
            SuText.setEditable(false);
            DiaLiText.setEditable(false);
            GdcdText.setEditable(false);
        }

        //Khối B1
        if (khoi_thi.equals("B1")) {
            try {
                toan = Float.parseFloat(ToanText.getText());
                if (toan < 0 || toan > 10) {
                    throw new Exception("Điểm Toán không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Toán không hợp lệ");
                isOK = false;
            }

            try {
                van = Float.parseFloat(VanText.getText());
                if (van < 0 || van > 10) {
                    throw new Exception("Điểm Văn không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            try {
                anh = Float.parseFloat(AnhText.getText());
                if (anh < 0 || anh > 10) {
                    throw new Exception("Điểm Anh không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Anh không hợp lệ");
                isOK = false;
            }

            try {
                sinh = Float.parseFloat(SinhText.getText());
                if (sinh < 0 || sinh > 10) {
                    throw new Exception("Điểm Sinh Học không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            try {
                su = Float.parseFloat(SuText.getText());
                if (su < 0 || su > 10) {
                    throw new Exception("Điểm Lịch Sử không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Lịch Sử không hợp lệ");
                isOK = false;
            }

            tohop = toan + sinh + su;
            TohopText.setText(String.valueOf(tohop));
            TohopText.setEditable(false);

            VatLiText.setEditable(false);
            HoaText.setEditable(false);
            DiaLiText.setEditable(false);
            GdcdText.setEditable(false);
        }

        //Khối C
        if (khoi_thi.equals("C")) {
            try {
                toan = Float.parseFloat(ToanText.getText());
                if (toan < 0 || toan > 10) {
                    throw new Exception("Điểm Toán không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Toán không hợp lệ");
                isOK = false;
            }

            try {
                van = Float.parseFloat(VanText.getText());
                if (van < 0 || van > 10) {
                    throw new Exception("Điểm Văn không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            try {
                anh = Float.parseFloat(AnhText.getText());
                if (anh < 0 || anh > 10) {
                    throw new Exception("Điểm Anh không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Anh không hợp lệ");
                isOK = false;
            }

            try {
                su = Float.parseFloat(SuText.getText());
                if (su < 0 || su > 10) {
                    throw new Exception("Điểm Lịch Sử không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Lịch Sử không hợp lệ");
                isOK = false;
            }

            try {
                dli = Float.parseFloat(DiaLiText.getText());
                if (dli < 0 || dli > 10) {
                    throw new Exception("Điểm Địa Lí không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Địa Lí không hợp lệ");
                isOK = false;
            }

            tohop = van + su + dli;
            TohopText.setText(String.valueOf(tohop));
            TohopText.setEditable(false);

            VatLiText.setEditable(false);
            HoaText.setEditable(false);
            SinhText.setEditable(false);
            GdcdText.setEditable(false);
        }

        //Khối C1
        if (khoi_thi.equals("C1")) {
            try {
                toan = Float.parseFloat(ToanText.getText());
                if (toan < 0 || toan > 10) {
                    throw new Exception("Điểm Toán không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Toán không hợp lệ");
                isOK = false;
            }

            try {
                van = Float.parseFloat(VanText.getText());
                if (van < 0 || van > 10) {
                    throw new Exception("Điểm Văn không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Văn không hợp lệ");
                isOK = false;
            }

            try {
                anh = Float.parseFloat(AnhText.getText());
                if (anh < 0 || anh > 10) {
                    throw new Exception("Điểm Anh không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Anh không hợp lệ");
                isOK = false;
            }

            try {
                su = Float.parseFloat(SuText.getText());
                if (su < 0 || su > 10) {
                    throw new Exception("Điểm Lịch Sử không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Lịch Sử không hợp lệ");
                isOK = false;
            }

            try {
                gdcd = Float.parseFloat(GdcdText.getText());
                if (gdcd < 0 || gdcd > 10) {
                    throw new Exception("Điểm Giáo dục công dân không hợp lệ. Vui lòng nhập điểm từ 0 đến 10.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Điểm Giáo dục công dân không hợp lệ");
                isOK = false;
            }

            tohop = van + su + gdcd;
            TohopText.setText(String.valueOf(tohop));
            TohopText.setEditable(false);

            HoaText.setEditable(false);
            VatLiText.setEditable(false);
            DiaLiText.setEditable(false);
            GdcdText.setEditable(false);
        }

        if(isOK) {
            Diem_Thi diemthi = new Diem_Thi(sbd, name, khoi_thi, toan, van, anh, vli, hoa, sinh, su, dli, gdcd, tohop);
            home.updateDiemThi(diemthi);
            JOptionPane.showMessageDialog(rootPane, "Sửa Thành Công");
            this.dispose();
        }
    }//GEN-LAST:event_SaveDtBtnActionPerformed

    public void setEditDTData(Diem_Thi diemthi) {
        SbdDTText.setText(diemthi.getSbd() + "");
        HoTenDTText.setText(diemthi.getTen_thi_sinh());
        KhoiThiDTText.setText(diemthi.getKhoi_thi());
        ToanText.setText(diemthi.getDiem_Toan() + "");
        VanText.setText(diemthi.getDiem_Van() + "");
        AnhText.setText(diemthi.getDiem_Anh()+ ""); 
        VatLiText.setText(diemthi.getDiem_Vli() + "");
        HoaText.setText(diemthi.getDiem_Hoa() + "");
        SinhText.setText(diemthi.getDiem_Sinh() + "");
        SuText.setText(diemthi.getDiem_Su() + "");
        DiaLiText.setText(diemthi.getDiem_Dli()+ "");
        GdcdText.setText(diemthi.getDiem_Gdcd() + "");
        TohopText.setText(diemthi.getDiem_Tohop() + "");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditDiemThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditDiemThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditDiemThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditDiemThi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditDiemThi dialog = new EditDiemThi(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AnhText;
    private javax.swing.JButton CancelDtBtn;
    private javax.swing.JTextField DiaLiText;
    private javax.swing.JTextField GdcdText;
    private javax.swing.JTextField HoTenDTText;
    private javax.swing.JTextField HoaText;
    private javax.swing.JTextField KhoiThiDTText;
    private javax.swing.JButton SaveDtBtn;
    private javax.swing.JTextField SbdDTText;
    private javax.swing.JTextField SinhText;
    private javax.swing.JTextField SuText;
    private javax.swing.JTextField ToanText;
    private javax.swing.JTextField TohopText;
    private javax.swing.JTextField VanText;
    private javax.swing.JTextField VatLiText;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    // End of variables declaration//GEN-END:variables
}
